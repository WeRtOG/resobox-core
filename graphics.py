import asyncio
import json
from PIL import Image, ImageDraw, ImageFont
import websockets

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
text = "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!"
font_path = "assets/fonts/font.ttf"
font_size = 24

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —à—Ä–∏—Ñ—Ç–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–¥–∏–Ω —Ä–∞–∑
font = ImageFont.truetype(font_path, font_size)
image = Image.new('1', (256, 128), 0)
draw = ImageDraw.Draw(image)

async def update_matrix(frequency=24):
    x, y = 0, 0  # –ù–∞—á–∞–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    while True:
        draw.rectangle((0, 0, image.width, image.height), fill=0)  # –û—á–∏—Å—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        draw.text((x, y), text, 1, font=font)  # –†–∏—Å–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
        pixels = image.load()
        matrix = [[pixels[x, y] for x in range(image.width)] for y in range(image.height)]
        x = (x + 1) % image.width  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
        await asyncio.sleep(1/frequency)  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        yield matrix  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π –º–∞—Ç—Ä–∏—Ü—ã

async def wwebsocket_handler(websocket, path):
    async for matrix in update_matrix():
        await websocket.send(json.dumps(matrix))
        await asyncio.sleep(1/24)  # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —á–∞—Å—Ç–æ—Ç–æ–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–∞—Ç—Ä–∏—Ü—ã

async def graphics_server():
    print("\nüì∫ Graphics server started\n")
    async with websockets.serve(wwebsocket_handler, '0.0.0.0', 8767):
        await asyncio.Future()  # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª

def start_graphics_server():
    asyncio.run(graphics_server())
