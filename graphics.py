import asyncio
import json
import websockets
from PIL import Image, ImageDraw, ImageFont

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
text = "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!"  # –¢–µ–∫—Å—Ç –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è
font_path = "assets/fonts/font.ttf"  # –ü—É—Ç—å –∫ —à—Ä–∏—Ñ—Ç—É
font_size = 24  # –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
x, y = 0, 0  # –ù–∞—á–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞

font = ImageFont.truetype(font_path, font_size)
image = Image.new('1', (256, 128), 0)  # –°–æ–∑–¥–∞–Ω–∏–µ —á–µ—Ä–Ω–æ-–±–µ–ª–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–¥–∏–Ω —Ä–∞–∑
draw = ImageDraw.Draw(image)  # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –æ–¥–∏–Ω —Ä–∞–∑


def create_image(x, y):
    draw.rectangle((0, 0, image.width, image.height), fill=0)  # –û—á–∏—Å—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    draw.text((x, y), text, 1, font=font)  # –†–∏—Å–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
    return image

async def websocket_handler(websocket, path):
    global x, y
    while True:
        image = create_image(x, y)
        pixels = image.load()
        matrix = [[pixels[x, y] for x in range(image.width)] for y in range(image.height)]
        await websocket.send(json.dumps(matrix))
        x = (x + 1) % image.width  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
        await asyncio.sleep(0.033)  # –ö–æ–Ω—Ç—Ä–æ–ª—å —Å–∫–æ—Ä–æ—Å—Ç–∏ –∞–Ω–∏–º–∞—Ü–∏–∏

async def graphics_server():
    print("\nüì∫ Graphics server started\n")
    async with websockets.serve(websocket_handler, '0.0.0.0', 8767):
        await asyncio.Future()  # Run forever

def start_graphics_server():
    asyncio.run(graphics_server())